{
    "copy-from-recipe": {
        "bin/": "%BIN_DIR%/",
        "config/": "%CONFIG_DIR%/",
        "custom/": "custom/",
        "public/": "%PUBLIC_DIR%/",
        "var/": "var/",
        "src/": "src/",
        "root/": ""
    },
    "bundles": {
        "Shopware\\Core\\Framework\\Framework": [
            "all"
        ],
        "Shopware\\Core\\System\\System": [
            "all"
        ],
        "Shopware\\Core\\Content\\Content": [
            "all"
        ],
        "Shopware\\Core\\Checkout\\Checkout": [
            "all"
        ],
        "Shopware\\Core\\Maintenance\\Maintenance": [
            "all"
        ],
        "Shopware\\Core\\DevOps\\DevOps": [
            "e2e"
        ]
    },
    "env": {
        "APP_ENV": "prod",
        "APP_URL": "http://localhost",
        "APP_SECRET": "%generate(secret)%",
        "INSTANCE_ID": "%generate(secret)%",
        "BLUE_GREEN_DEPLOYMENT": "0",
        "MAILER_URL": "null://localhost",
        "DATABASE_URL": "mysql://root:root@localhost/shopware"
    },
    "gitignore": [
        "custom/*",
        "!custom/plugins/.gitkeep",
        "!custom/static-plugins/",
        "/public/fonts/*",
        "!/public/fonts/.gitkeep",
        "/public/img/*",
        "!/public/img/.gitkeep",
        "/public/css/*",
        "!/public/css/.gitkeep",
        "/public/js/*",
        "!/public/js/.gitkeep",
        "/public/media/*",
        "!/public/media/.gitkeep",
        "/public/theme/*",
        "!/public/theme/.gitkeep",
        "/public/thumbnail/*",
        "!/public/thumbnail/.gitkeep",
        "/public/assets/*",
        "/public/sitemap/*",
        "!/public/sitemap/.gitkeep",
        "/public/bundles/*",
        "!/public/bundles/.gitkeep",
        "/files/*",
        "/var/*",
        "!/var/log/.gitkeep",
        "!/var/cache/.gitkeep",
        "/auth.json"
    ],
    "composer-scripts": {
        "pre-install-cmd": [
            "[ ! -f vendor/autoload.php ] || $PHP_BINARY bin/console system:update:prepare"
        ],
        "pre-update-cmd": [
            "[ ! -f vendor/autoload.php ] || $PHP_BINARY bin/console system:update:prepare"
        ],
        "post-install-cmd": [
            "@composer install --working-dir vendor/shopware/recovery --no-interaction --no-scripts",
            "@composer install --working-dir=vendor/shopware/recovery/Common --no-interaction --optimize-autoloader --no-suggest",
            "[ ! -f vendor/autoload.php ] || $PHP_BINARY bin/console system:update:finish"
        ],
        "post-update-cmd": [
            "@composer install --working-dir vendor/shopware/recovery --no-interaction --no-scripts",
            "@composer install --working-dir=vendor/shopware/recovery/Common --no-interaction --optimize-autoloader --no-suggest",
            "[ ! -f vendor/autoload.php ] || $PHP_BINARY bin/console system:update:finish"
        ]
    },
    "docker-compose": {
        "docker-compose.yml": {
            "services": [
                "app:",
                "  image: shopware/development:8.1-composer-2",
                "  ports:",
                "    - \"8000\":\"8000\"",
                "  volumes:",
                "    - ./:/app",
                "database:",
                "  image: mysql:${MYSQL_VERSION:-8}-oracle",
                "  environment:",
                "    MYSQL_DATABASE: ${MYSQL_DATABASE:-shopware}",
                "    # You should definitely change the password in production",
                "    MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-!ChangeMe!}",
                "    MYSQL_USER: ${MYSQL_USER:-shopware}",
                "    MYSQL_PASSWORD: ${MYSQL_PASSWORD:-!ChangeMe!}",
                "  volumes:",
                "    - db-data:/var/lib/mysql:rw",
                "    # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!",
                "    # - ./docker/db/data:/var/lib/mysql:rw"
            ],
            "volumes": ["db-data:"]
        },
        "docker-compose.override.yml": {
            "services": [
                "database:",
                "  ports:",
                "    - \"3306\"",

                "mailer:",
                "  image: schickling/mailcatcher",
                "  ports: [1025, 1080]"
            ]
        }
    }
}